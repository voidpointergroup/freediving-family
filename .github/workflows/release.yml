name: release
on:
  push:
#   workflow_dispatch:
#     inputs:
#       version:
#         description: "version"
#         required: true

jobs:
  version:
    name: version
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.export.outputs.version }}
    steps:
      - id: export
        run: 'printf "version=$(date +%s)" >> $GITHUB_OUTPUT'

  images:
    name: harbor (${{ needs.version.outputs.version }} - ${{ matrix.app }}/${{ matrix.flavor }})
    runs-on: ubuntu-latest
    needs: version
    strategy:
      matrix:
        include:
          - app: "apofed"
            flavor: "graphql"
          - app: "account"
            flavor: "graphql"
          - app: "account"
            flavor: "login"
          - app: "account"
            flavor: "worker"
          - app: "certification"
            flavor: "graphql"
          - app: "event"
            flavor: "graphql"
    steps:
      - uses: actions/checkout@v3
      - name: install rust
        run: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
      - name: install tools
        run: "cargo install neomake"
      - name: publish image
        run: |
          neomake x -c image -a app=${{ matrix.app }} -a flavor=${{ matrix.flavor }} -a version=${{ needs.version.outputs.version }}

  helm:
    name: harbor (${{ needs.version.outputs.version }} - helm chart)
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs:
      - version
      - images
    steps:
      - uses: actions/checkout@v3
      - name: install rust
        run: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
      - name: install tools
        run: |
          cargo install neomake
          cargo install complate
      - name: install dependencies
        run: "curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash"
      - name: publish helm
        run: |
          ls -algh
          neomake x -c helm -a chart=freediving-family -a version=${{ needs.version.outputs.version }}
